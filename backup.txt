    link = it.find('div', id='top4').find('a')['href']



    link = link.replace('/registers', 'https://www1.fips.ru/registers')
    print('Link:', link)

import requests
from bs4 import BeautifulSoup
from googletrans import Translator
import csv

translator = Translator()

url = 'https://www1.fips.ru/registers-doc-view/fips_servlet?DB=RUPAT&DocNumber='
headers = {
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; rv:102.0) Gecko/20100101 Firefox/102.0'
}

csv_file = open('data.csv', 'w', encoding='utf-8', newline='')
csv_writer = csv.writer(csv_file)
csv_writer.writerow(['Dokumen', 'Penemuan', 'Terbit', 'Status'])

for docnumber in range(1, 10):
    req = requests.get(url+str(docnumber), headers=headers)
    soup = BeautifulSoup(req.text, 'html.parser')
    judulp = soup.findAll('div', id='mainDoc')

    for it in judulp:
        halaman = it.find('div', id='top4').find('a').get_text(strip=False)
        judul = it.find('p', id='B542').get_text(strip=False)
        terbit = it.find('table', id='bib').get_text(strip=False)
        status = it.find('td', id='StatusR').get_text(strip=False)

        print('Dokumen:', halaman)

        detected_language = translator.detect(judul).lang
        translated_text = translator.translate(judul, src=detected_language, dest='id').text.replace('(54)', '')
        print('Penemuan:', translated_text, '\n')

        detected_language = translator.detect(terbit).lang
        translated_text2 = translator.translate(terbit, src=detected_language, dest='id').text.replace('(21) (22)', '')
        translated_text2 = translated_text2.replace('\n', '')
        labels = ['(21)', '(22)', '(45)', '(71)', '(72)', '(73)', '(24)', '(56)']
        for label in labels:
            translated_text2 = translated_text2.replace(label, '\n').replace('Aplikasi', 'Ditemukan')
        print(translated_text2)

        detected_language = translator.detect(status).lang
        translated_text3 = translator.translate(status, src=detected_language, dest='id').text.replace('tidak ada data', 'tidak ada pembaruan')
        print(translated_text3, '\n')


import os
from colorama import init, Fore, Style

# Inisialisasi colorama
init()

# Fungsi untuk membersihkan layar terminal
def clear_screen():
    if os.name == 'posix':  # Untuk sistem operasi berbasis Unix (Linux, macOS)
        os.system('clear')
    else:  # Untuk sistem operasi Windows
        os.system('cls')

# Fungsi untuk menampilkan header
def show_header():
    header = r"""
████████╗███████╗██████╗ ███████╗███████╗██████╗  █████╗  ██████╗████████╗
╚══██╔══╝██╔════╝██╔══██╗██╔════╝██╔════╝██╔══██╗██╔══██╗██╔════╝╚══██╔══╝
   ██║   █████╗  ██████╔╝███████╗█████╗  ██████╔╝███████║██║        ██║   
   ██║   ██╔══╝  ██╔══██╗╚════██║██╔══╝  ██╔══██╗██╔══██║██║        ██║   
   ██║   ███████╗██║  ██║███████║███████╗██║  ██║██║  ██║╚██████╗   ██║   
   ╚═╝   ╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝   ╚═╝                                  
    """
    print(Fore.RED + header + Style.RESET_ALL)

# Fungsi untuk menampilkan menu
def show_menu():
    print(Fore.CYAN + "╔═════════════════════════════╗",Fore.GREEN+' Dev :'+Fore.WHITE+' RKun')
    print(Fore.CYAN + "║    "+Fore.LIGHTRED_EX+"1,000,000+ Doc Rusia"+Fore.CYAN+"     ║",Fore.LIGHTBLUE_EX+' Powered By:'+Fore.WHITE+' Terseract,Python3,OpenAI')
    print(Fore.CYAN + "╠═════════════════════════════╣"+Fore.YELLOW,' Lib:'+Fore.WHITE+' colorama,bs4,googletrans,request')
    print(Fore.CYAN + "║ "+Fore.WHITE+"1. Mulai mengambil database"+Fore.CYAN+" ║",Fore.BLUE+' Disclaimer:'+Fore.WHITE+' program ini tidak mengambil top secret')
    print(Fore.CYAN + "║ "+Fore.WHITE+"2.     Lihat save file"+Fore.CYAN+"      ║",Fore.LIGHTRED_EX+' Gunakan informasi dengan bijak')
    print(Fore.CYAN + "║ "+Fore.WHITE+"3.         Keluar"+Fore.CYAN+"           ║",Fore.WHITE+' masukkan nomor untuk melihat dokumen lengkap')
    print(Fore.CYAN + "╚═════════════════════════════╝" + Style.RESET_ALL)
    print(Fore.RED+'Disc: ☢semua pengetahuan dan informasi dimiliki oleh rusia☢', Style.RESET_ALL)

# Fungsi untuk menjalankan aplikasi
def run_app():
    while True:
        clear_screen()
        show_header()
        show_menu()
        choice = input("Input: ")

        if choice == '1':
            clear_screen()
            print(Fore.GREEN + "=== ENKRIPSI PESAN ===")
            # Kode untuk menjalankan enkripsi pesan
            # ...

        elif choice == '2':
            clear_screen()
            print(Fore.GREEN + "=== DEKRIPSI PESAN ===")
            # Kode untuk menjalankan dekripsi pesan
            # ...

        elif choice == '3':
            clear_screen()
            print(Fore.YELLOW + "Keluar dari aplikasi." + Style.RESET_ALL)
            break

        else:
            clear_screen()
            print(Fore.RED + "Pilihan tidak valid. Silakan coba lagi.")
            input("Tekan Enter untuk melanjutkan...")
            clear_screen()

        # Jeda sebelum kembali ke menu utama
        input("Tekan Enter untuk kembali ke menu utama...")
        clear_screen()

run_app()
